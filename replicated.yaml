---
# kind: replicated

replicated_api_version: 2.29.0
name: "Kubernetes Redis IngressRoute"

properties:
  app_url: http://{{repl ConfigOption "hostname" }}
  console_title: "Kubernetes Redis IngressRoute"

host_requirements:
  replicated_version: ">=2.29.0"

kubernetes:
  requirements:
    total_cores: "2"
    total_memory: 8GB

config:
- name: basic_config
  title: Basics
  description: Please enter the hostname or IP of this serrver.
  items:
  - name: hostname
    title: Hostname
    value: '{{repl ConsoleSetting "tls.hostname" }}'
    type: text
    test_proc:
      display_name: Check DNS
      command: resolve_host
- name: server
  title: Server Config
  items:
  - name: num_replicas
    title: Number of instances to run
    default: 1
    type: text
  - name: db_url
    title: Database URL
    type: text
    required: true
    default: postgres://pg.somebigbank.com/my_database?username=xxx&password=yyy

images:
# this section needs to be included for airgap installs
- name: dockersamples/static-site
  source: public
---
# kind: scheduler-kubernetes
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
spec:
  selector:
    matchLabels:
      app: blog
  replicas: 3
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
      - name: blog
        image: dockersamples/static-site
        env:
        - name: AUTHOR
          value: blog
        ports:
        - containerPort: 80
---
# kind: scheduler-kubernetes
apiVersion: v1
kind: Service
metadata:
  labels:
    app: blog
  name: s1
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: blog
---
# kind: scheduler-kubernetes
apiVersion: v1
kind: Service
metadata:
  labels:
    name: redis      
  name: redis
spec:
  ports:
  - name: tcp
    port: 6379
    protocol: TCP
    targetPort: 6379 
  selector:
    app: redis
  sessionAffinity: None    
---
# kind: scheduler-kubernetes
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        tier: backend
    spec:
      containers:
      - name: redis
        image: redis
        imagePullPolicy: IfNotPresent
        ports:
        - name: redis
          containerPort: 6379
---
# kind: scheduler-kubernetes
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  name: blog
spec: 
  virtualhost:
    fqdn: demo-aj-blog.somebigbank.com
  routes: 
    - match: /
      services:
        - name: s1
          port: 80
---
# kind: scheduler-kubernetes
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  name: redis
spec: 
  virtualhost:
    fqdn: demo-aj.somebigbank.com
    tls:
      secretName: www-tls
  tcpproxy:
    services:
    - name: redis
      port: 6379
  routes:
    - match: /
      services:
      - name: dummytest
        port: 80
---
# kind: scheduler-kubernetes

# A generic v1/Secret that stores the Replicated Admin Console certificates
apiVersion: v1
kind: Secret
metadata:
  name: www-tls
type: kubernetes.io/tls
data:
  tls.crt: '{{repl ConsoleSetting "tls.cert.data" | Base64Encode }}'
  tls.key: '{{repl ConsoleSetting "tls.key.data" | Base64Encode }}'
---
# kind: scheduler-kubernetes
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  name: postgres
spec: 
  virtualhost:
    fqdn: demo-aj-postgres.somebigbank.com
    tls:
      secretName: www-tls
  tcpproxy:
    services:
    - name: postgres
      port: 5432
  routes:
    - match: /
      services:
      - name: dummytest
        port: 443
---
# kind: scheduler-kubernetes
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  EXAMPLE_DB_HOST: postgres://postgres@postgres/example?sslmode=disable
  EXAMPLE_DB_KIND: postgres
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_USER: postgres
---
# kind: scheduler-kubernetes
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
  selector:
    app: postgres
---
# kind: scheduler-kubernetes
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
spec:
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: "postgres:10.1"
        name: postgres
        envFrom:
        - configMapRef:
            name: postgres-config
        ports:
        - containerPort: 5432
          name: postgres
